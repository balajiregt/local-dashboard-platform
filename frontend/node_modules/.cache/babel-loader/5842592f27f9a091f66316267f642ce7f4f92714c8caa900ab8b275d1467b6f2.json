{"ast":null,"code":"var _jsxFileName = \"/Users/bky13/Desktop/local_dashboard_platform/frontend/src/pages/Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Card, CardContent, Grid, TextField, Button, Switch, FormControlLabel, Divider, Alert, Chip, List, ListItem, ListItemText, ListItemSecondaryAction } from '@mui/material';\nimport { Save, Refresh, GitHub, Link } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [config, setConfig] = useState({\n    repository: process.env.REACT_APP_GITHUB_REPO || '',\n    refreshInterval: 30,\n    autoRefresh: true,\n    showPassedTests: true,\n    showSkippedTests: true,\n    maxReportsDisplay: 50\n  });\n  const [saved, setSaved] = useState(false);\n  const handleConfigChange = (field, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSave = () => {\n    // In a real implementation, this would save to localStorage or API\n    console.log('Saving configuration:', config);\n    setSaved(true);\n    setTimeout(() => setSaved(false), 3000);\n  };\n  const handleTestConnection = async () => {\n    // Test GitHub API connection\n    console.log('Testing GitHub connection...');\n  };\n  const repoOwner = config.repository.split('/')[0];\n  const repoName = config.repository.split('/')[1];\n  const dashboardUrl = `https://${repoOwner}.github.io/${repoName}`;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      sx: {\n        mb: 4\n      },\n      children: \"Configure your Playwright Reports dashboard settings and GitHub integration.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), saved && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setSaved(false),\n      children: \"Settings saved successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"GitHub Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"GitHub Repository\",\n                value: config.repository,\n                onChange: e => handleConfigChange('repository', e.target.value),\n                placeholder: \"owner/repository-name\",\n                helperText: \"Format: owner/repository-name (e.g., myteam/playwright-reports)\",\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), config.repository && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  children: \"Dashboard URL:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    icon: /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 31\n                    }, this),\n                    label: dashboardUrl,\n                    component: \"a\",\n                    href: dashboardUrl,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    clickable: true,\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(GitHub, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 30\n                }, this),\n                onClick: handleTestConnection,\n                disabled: !config.repository,\n                children: \"Test Connection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Display Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                type: \"number\",\n                label: \"Refresh Interval (seconds)\",\n                value: config.refreshInterval,\n                onChange: e => handleConfigChange('refreshInterval', parseInt(e.target.value)),\n                inputProps: {\n                  min: 10,\n                  max: 300\n                },\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: config.autoRefresh,\n                  onChange: e => handleConfigChange('autoRefresh', e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this),\n                label: \"Auto-refresh dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: config.showPassedTests,\n                  onChange: e => handleConfigChange('showPassedTests', e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this),\n                label: \"Show passed tests in reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: config.showSkippedTests,\n                  onChange: e => handleConfigChange('showSkippedTests', e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this),\n                label: \"Show skipped tests in reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                type: \"number\",\n                label: \"Max reports to display\",\n                value: config.maxReportsDisplay,\n                onChange: e => handleConfigChange('maxReportsDisplay', parseInt(e.target.value)),\n                inputProps: {\n                  min: 10,\n                  max: 200\n                },\n                sx: {\n                  mt: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"CLI Setup Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: \"To upload test reports to this dashboard, install and configure the CLI tool on your local machine.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"1. Install the CLI tool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  backgroundColor: 'grey.100',\n                  p: 2,\n                  borderRadius: 1,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  fontFamily: \"monospace\",\n                  children: \"npm install -g playwright-reports-cli\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"2. Initialize configuration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  backgroundColor: 'grey.100',\n                  p: 2,\n                  borderRadius: 1,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  fontFamily: \"monospace\",\n                  children: [\"playwright-reports init --repo \", config.repository || 'owner/repo']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"3. Upload test results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  backgroundColor: 'grey.100',\n                  p: 2,\n                  borderRadius: 1,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  fontFamily: \"monospace\",\n                  children: [\"npx playwright test --trace=on\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), \"playwright-reports upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Make sure to set your GITHUB_TOKEN environment variable or configure it during initialization.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Environment Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"GitHub Repository\",\n                  secondary: process.env.REACT_APP_GITHUB_REPO || 'Not configured'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: process.env.REACT_APP_GITHUB_REPO ? 'Set' : 'Missing',\n                    color: process.env.REACT_APP_GITHUB_REPO ? 'success' : 'error',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"GitHub Token\",\n                  secondary: process.env.REACT_APP_GITHUB_TOKEN ? 'Configured' : 'Not configured'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: process.env.REACT_APP_GITHUB_TOKEN ? 'Set' : 'Missing',\n                    color: process.env.REACT_APP_GITHUB_TOKEN ? 'success' : 'warning',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Build Mode\",\n                  secondary: process.env.NODE_ENV || 'development'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 22\n        }, this),\n        onClick: () => window.location.reload(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 22\n        }, this),\n        onClick: handleSave,\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"7PAwH2i5h1KnevQmowRZNcNC2Og=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","Box","Typography","Card","CardContent","Grid","TextField","Button","Switch","FormControlLabel","Divider","Alert","Chip","List","ListItem","ListItemText","ListItemSecondaryAction","Save","Refresh","GitHub","Link","jsxDEV","_jsxDEV","Settings","_s","config","setConfig","repository","process","env","REACT_APP_GITHUB_REPO","refreshInterval","autoRefresh","showPassedTests","showSkippedTests","maxReportsDisplay","saved","setSaved","handleConfigChange","field","value","prev","handleSave","console","log","setTimeout","handleTestConnection","repoOwner","split","repoName","dashboardUrl","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mb","severity","onClose","container","spacing","item","xs","md","fullWidth","label","onChange","e","target","placeholder","helperText","display","alignItems","gap","icon","href","rel","clickable","startIcon","onClick","disabled","type","parseInt","inputProps","min","max","control","checked","my","mt","backgroundColor","p","borderRadius","fontFamily","dense","primary","secondary","size","REACT_APP_GITHUB_TOKEN","NODE_ENV","justifyContent","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/bky13/Desktop/local_dashboard_platform/frontend/src/pages/Settings.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Button,\n  Switch,\n  FormControlLabel,\n  Divider,\n  Alert,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@mui/material';\nimport {\n  Save,\n  Refresh,\n  GitHub,\n  Link,\n  Delete,\n  Info,\n} from '@mui/icons-material';\n\nconst Settings: React.FC = () => {\n  const [config, setConfig] = useState({\n    repository: process.env.REACT_APP_GITHUB_REPO || '',\n    refreshInterval: 30,\n    autoRefresh: true,\n    showPassedTests: true,\n    showSkippedTests: true,\n    maxReportsDisplay: 50,\n  });\n  \n  const [saved, setSaved] = useState(false);\n\n  const handleConfigChange = (field: string, value: any) => {\n    setConfig(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleSave = () => {\n    // In a real implementation, this would save to localStorage or API\n    console.log('Saving configuration:', config);\n    setSaved(true);\n    setTimeout(() => setSaved(false), 3000);\n  };\n\n  const handleTestConnection = async () => {\n    // Test GitHub API connection\n    console.log('Testing GitHub connection...');\n  };\n\n  const repoOwner = config.repository.split('/')[0];\n  const repoName = config.repository.split('/')[1];\n  const dashboardUrl = `https://${repoOwner}.github.io/${repoName}`;\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Settings\n      </Typography>\n      \n      <Typography variant=\"body1\" color=\"textSecondary\" sx={{ mb: 4 }}>\n        Configure your Playwright Reports dashboard settings and GitHub integration.\n      </Typography>\n\n      {saved && (\n        <Alert severity=\"success\" sx={{ mb: 3 }} onClose={() => setSaved(false)}>\n          Settings saved successfully!\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* GitHub Configuration */}\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                GitHub Configuration\n              </Typography>\n              \n              <Box sx={{ mb: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"GitHub Repository\"\n                  value={config.repository}\n                  onChange={(e) => handleConfigChange('repository', e.target.value)}\n                  placeholder=\"owner/repository-name\"\n                  helperText=\"Format: owner/repository-name (e.g., myteam/playwright-reports)\"\n                  sx={{ mb: 2 }}\n                />\n                \n                {config.repository && (\n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                      Dashboard URL:\n                    </Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Chip \n                        icon={<Link />}\n                        label={dashboardUrl}\n                        component=\"a\"\n                        href={dashboardUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        clickable\n                        color=\"primary\"\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                  </Box>\n                )}\n                \n                <Button\n                  variant=\"outlined\"\n                  startIcon={<GitHub />}\n                  onClick={handleTestConnection}\n                  disabled={!config.repository}\n                >\n                  Test Connection\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Display Settings */}\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Display Settings\n              </Typography>\n              \n              <Box sx={{ mb: 2 }}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"Refresh Interval (seconds)\"\n                  value={config.refreshInterval}\n                  onChange={(e) => handleConfigChange('refreshInterval', parseInt(e.target.value))}\n                  inputProps={{ min: 10, max: 300 }}\n                  sx={{ mb: 2 }}\n                />\n                \n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={config.autoRefresh}\n                      onChange={(e) => handleConfigChange('autoRefresh', e.target.checked)}\n                    />\n                  }\n                  label=\"Auto-refresh dashboard\"\n                />\n              </Box>\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <Box>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={config.showPassedTests}\n                      onChange={(e) => handleConfigChange('showPassedTests', e.target.checked)}\n                    />\n                  }\n                  label=\"Show passed tests in reports\"\n                />\n                \n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={config.showSkippedTests}\n                      onChange={(e) => handleConfigChange('showSkippedTests', e.target.checked)}\n                    />\n                  }\n                  label=\"Show skipped tests in reports\"\n                />\n                \n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"Max reports to display\"\n                  value={config.maxReportsDisplay}\n                  onChange={(e) => handleConfigChange('maxReportsDisplay', parseInt(e.target.value))}\n                  inputProps={{ min: 10, max: 200 }}\n                  sx={{ mt: 2 }}\n                />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* CLI Setup Instructions */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                CLI Setup Instructions\n              </Typography>\n              \n              <Alert severity=\"info\" sx={{ mb: 3 }}>\n                <Typography variant=\"body2\">\n                  To upload test reports to this dashboard, install and configure the CLI tool on your local machine.\n                </Typography>\n              </Alert>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  1. Install the CLI tool\n                </Typography>\n                <Box sx={{ backgroundColor: 'grey.100', p: 2, borderRadius: 1, mb: 2 }}>\n                  <Typography variant=\"body2\" fontFamily=\"monospace\">\n                    npm install -g playwright-reports-cli\n                  </Typography>\n                </Box>\n                \n                <Typography variant=\"subtitle2\" gutterBottom>\n                  2. Initialize configuration\n                </Typography>\n                <Box sx={{ backgroundColor: 'grey.100', p: 2, borderRadius: 1, mb: 2 }}>\n                  <Typography variant=\"body2\" fontFamily=\"monospace\">\n                    playwright-reports init --repo {config.repository || 'owner/repo'}\n                  </Typography>\n                </Box>\n                \n                <Typography variant=\"subtitle2\" gutterBottom>\n                  3. Upload test results\n                </Typography>\n                <Box sx={{ backgroundColor: 'grey.100', p: 2, borderRadius: 1, mb: 2 }}>\n                  <Typography variant=\"body2\" fontFamily=\"monospace\">\n                    npx playwright test --trace=on\n                    <br />\n                    playwright-reports upload\n                  </Typography>\n                </Box>\n              </Box>\n              \n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Make sure to set your GITHUB_TOKEN environment variable or configure it during initialization.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Environment Variables */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Environment Information\n              </Typography>\n              \n              <List dense>\n                <ListItem>\n                  <ListItemText \n                    primary=\"GitHub Repository\" \n                    secondary={process.env.REACT_APP_GITHUB_REPO || 'Not configured'}\n                  />\n                  <ListItemSecondaryAction>\n                    <Chip \n                      label={process.env.REACT_APP_GITHUB_REPO ? 'Set' : 'Missing'} \n                      color={process.env.REACT_APP_GITHUB_REPO ? 'success' : 'error'}\n                      size=\"small\"\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n                \n                <ListItem>\n                  <ListItemText \n                    primary=\"GitHub Token\" \n                    secondary={process.env.REACT_APP_GITHUB_TOKEN ? 'Configured' : 'Not configured'}\n                  />\n                  <ListItemSecondaryAction>\n                    <Chip \n                      label={process.env.REACT_APP_GITHUB_TOKEN ? 'Set' : 'Missing'} \n                      color={process.env.REACT_APP_GITHUB_TOKEN ? 'success' : 'warning'}\n                      size=\"small\"\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n                \n                <ListItem>\n                  <ListItemText \n                    primary=\"Build Mode\" \n                    secondary={process.env.NODE_ENV || 'development'}\n                  />\n                </ListItem>\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Save Button */}\n      <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n        <Button\n          variant=\"outlined\"\n          startIcon={<Refresh />}\n          onClick={() => window.location.reload()}\n        >\n          Reset\n        </Button>\n        <Button\n          variant=\"contained\"\n          startIcon={<Save />}\n          onClick={handleSave}\n        >\n          Save Settings\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Settings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}